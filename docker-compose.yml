services:
  neo4j:
    image: neo4j:5.25.1-community
    container_name: grapse-neo4j
    environment:
      - NEO4J_AUTH=neo4j/grapse_password
      - NEO4J_PLUGINS=["apoc", "graph-data-science", "apoc-extended"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_server_memory_heap_initial__size=1G
      - NEO4J_server_memory_heap_max__size=2G
      - NEO4J_server_memory_pagecache_size=1G
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-import:/var/lib/neo4j/import
      - neo4j-plugins:/plugins
    networks:
      - grapse-network
    healthcheck:
      test: ["CMD", "cypher-shell", "--uri", "bolt://localhost:7687", "--username", "neo4j", "--password", "grapse_password", "MATCH () RETURN count(*) as count"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 180s

  grapse:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: grapse-app
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=grapse_password
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./papers:/app/papers
      - ./output:/app/output
      - grapse-state:/app/state
      - grapse-logs:/app/logs
    networks:
      - grapse-network
    depends_on:
      neo4j:
        condition: service_healthy
    stdin_open: true
    tty: true
    command: ["python", "scripts/docker-entrypoint.py"]

  grapse-chat:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: grapse-chat
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=grapse_password
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./papers:/app/papers
      - ./output:/app/output
      - grapse-state:/app/state
      - grapse-logs:/app/logs
    networks:
      - grapse-network
    depends_on:
      neo4j:
        condition: service_healthy
    stdin_open: true
    tty: true
    profiles: ["chat-only"]
    command: ["python", "scripts/interactive_chat.py"]

  grapse-watcher:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: grapse-watcher
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=grapse_password
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./papers:/app/papers
      - ./output:/app/output
      - grapse-state:/app/state
      - grapse-logs:/app/logs
    networks:
      - grapse-network
    depends_on:
      neo4j:
        condition: service_healthy
    profiles: ["with-watcher"]
    command: ["python", "scripts/watch_papers.py"]

networks:
  grapse-network:
    driver: bridge

volumes:
  neo4j-data:
    driver: local
  neo4j-logs:
    driver: local
  neo4j-import:
    driver: local
  neo4j-plugins:
    driver: local
  grapse-state:
    driver: local
  grapse-logs:
    driver: local